from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, ReplyKeyboardRemove

from bot import bot_delete_message_from_chat
from core.database.requests import create_question, save_answer_to_question
from core.handlers.apshed import bot_notify_moderators
from core.handlers.basic import cmd_start
from core.keyboards.inline_keyboards import to_next_question
from core.keyboards.reply_keyboards import cancel

storage = MemoryStorage()

question_fsm_router = Router()


class FSMQuestion(StatesGroup):
    ask_question = State()
    answer_question = State()


@question_fsm_router.message(F.text.lower() == '–æ—Ç–º–µ–Ω–∞', StateFilter(FSMQuestion.answer_question))
async def get_answer_to_question(message: Message, state: FSMContext):
    user_data = await state.get_data()
    question_id = user_data['question_id']
    qmessage_id = user_data['message_id']
    sent_message_id = user_data['sent_message_id']
    await bot_delete_message_from_chat(chat_id=message.chat.id, message_id=qmessage_id)
    await bot_delete_message_from_chat(chat_id=message.chat.id, message_id=sent_message_id)
    await state.update_data({})
    await state.clear()
    await message.answer(text='–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã... –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤–∞—Å –Ω–∞ –∫–∞–±–∏–Ω–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞',
                         reply_markup=ReplyKeyboardRemove())
    from core.handlers.moderator import cmd_moderator
    await cmd_moderator(message)


@question_fsm_router.message(StateFilter(FSMQuestion.answer_question))
async def get_answer_to_question(message: Message, state: FSMContext):
    user_data = await state.get_data()
    question_id = user_data['question_id']
    qmessage_id = user_data['message_id']
    sent_message_id = user_data['sent_message_id']
    result = await save_answer_to_question(question_id=question_id, answer=message.text)
    await bot_delete_message_from_chat(chat_id=message.chat.id, message_id=qmessage_id)
    await bot_delete_message_from_chat(chat_id=message.chat.id, message_id=sent_message_id)
    await state.update_data({})
    await state.clear()
    text = '–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–± –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–ª–µ–¥ –≤–æ–ø—Ä–æ—Å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!'
    if result == 'error':
        text = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –£–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –æ—à–∏–±–∫–∏!'
    await message.answer(text=text, reply_markup=await to_next_question())


@question_fsm_router.message(F.text.lower() == '—Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞', StateFilter(default_state))
async def support_func(message: Message, state: FSMContext):
    await state.set_state(FSMQuestion.ask_question)
    await message.delete()
    sent_message = await message.answer(text='–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:', reply_markup=await cancel())
    await state.update_data(message_id=sent_message.message_id)


@question_fsm_router.message(F.text.lower() == "–æ—Ç–º–µ–Ω–∞", StateFilter(FSMQuestion.ask_question))
async def cancel_state(message: Message, state: FSMContext):
    user_data = await state.get_data()
    await bot_delete_message_from_chat(message.chat.id, user_data['message_id'])
    await message.delete()
    await state.clear()
    await state.update_data({})
    await cmd_start(message, None)


@question_fsm_router.message(StateFilter(FSMQuestion.ask_question))
async def send_question(message: Message, state: FSMContext):
    user_data = await state.get_data()
    await bot_delete_message_from_chat(chat_id=message.chat.id, message_id=user_data['message_id'])
    await message.delete()
    result = await create_question(user_id=message.chat.id, question=message.text)
    if result == 'success':
        await message.answer(
            text='‚úÖ–í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º! –ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –æ—Ç–≤–µ—Ç—è—Ç –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!')
        await bot_notify_moderators(text='–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!üí≠')
    else:
        await message.answer(
            text='‚ùå–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –Ω–µ–π!üßëüèª‚Äçüíª')
    await cmd_start(message=message, state=None)
    await state.update_data({})
    await state.clear()
