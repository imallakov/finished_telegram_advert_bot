from aiogram import Router
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message

from bot import can_post_in_chat, get_chat_by_username_from_telegram, bot_delete_message_from_chat
from core.database.requests import add_chat, add_tariffs, change_moderator_status
from core.keyboards.inline_keyboards import after_adding_new_tariff_keyboard, after_adding_new_chat_keyboard, \
    after_adding_new_moderator_keyboard

admin_fsm_router = Router()


class FSMAdmin(StatesGroup):
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ State, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    # –ø–µ—Ä–µ—á–∏—Å–ª—è—è –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è
    # –±–æ—Ç –≤ —Ä–∞–∑–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    add_chat = State()
    fsm_tariff = State()
    add_moderator = State()


@admin_fsm_router.message(StateFilter(FSMAdmin.add_moderator))
async def fsm_add_moderator(message: Message, state: FSMContext):
    user_id = None
    username = None
    if message.text.isdigit():
        user_id = int(message.text)
    else:
        username = message.text
        if username.startswith('@'):
            username = username[1:]
    res = await change_moderator_status(user_id=user_id, username=username, is_moderator=True)
    if res == 'success':
        answer = (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤‚úÖ')
    elif res == 'not_found':
        answer = (f'ü§∑üèª‚Äç‚ôÇÔ∏è–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                  f'–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞—à –±–æ—Ç. –ü–æ—Ç–æ–º –∑–∞–Ω–æ–≤–æ –ø–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤'
                  f'–ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–æ –ø–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º –µ–≥–æ USER ID –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ '
                  f'–µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ü§î')
    else:
        answer = (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤‚ùå\n'
                  f' –û—à–∏–±–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–ºüßëüèª‚Äçüíª')
    data = await state.get_data()
    message_id = data['message_id']
    await bot_delete_message_from_chat(chat_id=message.chat.id, message_id=message_id)
    await message.delete()
    await state.update_data({})
    await state.clear()
    await message.answer(
        text=answer,
        reply_markup=await after_adding_new_moderator_keyboard()
    )


@admin_fsm_router.message(StateFilter(FSMAdmin.add_chat))
async def get_chat_name(message: Message, state: FSMContext):
    chat_username: str = message.text
    if not chat_username.startswith('@'):
        chat_username = '@' + chat_username
    search_message = await message.answer(text=f'Searching for chat/channel with username: {chat_username}')
    can_post: str = await can_post_in_chat(chat_username)
    if can_post == 'success':
        chat = await get_chat_by_username_from_telegram(chat_username)
        if type(chat) is not str:
            res = await add_chat(chat_id=chat.id, chat_title=chat.title, chat_username=chat.username,
                                 chat_type=chat.type)
            if res == 'success':
                answer = f'–ß–∞—Ç/–∫–∞–Ω–∞–ª @{chat.username} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω‚úÖ'
            elif res == 'reactivated':
                answer = f'–ß–∞—Ç/–∫–∞–Ω–∞–ª @{chat.username} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ –≤—ã–±–æ—Ä–∞‚úÖ'
            elif res == 'exists':
                answer = f'–ß–∞—Ç/–∫–∞–Ω–∞–ª @{chat.username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ‚úÖ'
            else:
                answer = (f'‚ùó–û—à–∏–±–∫–∞‚ùó\n–ß–∞—Ç/–∫–∞–Ω–∞–ª @{chat.username} –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω‚ùå\n'
                          f'–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–∂–µ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞–¥ —Ä–µ—à–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ãüßëüèª‚Äçüíª')
        else:
            answer = f'–ß–∞—Ç/–∫–∞–Ω–∞–ª {chat_username} –Ω–µ  —Å—É—â–µ—Å—Ç–≤—É–µ—Çü§∑üèª‚Äç‚ôÇÔ∏è'
    else:
        answer = (f'–ß–∞—Ç/–∫–∞–Ω–∞–ª {chat_username} –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –≤—ã–±–æ—Ä–æ–≤. –ù–µ—Ç—É —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ '
                  f'–æ—Ç–ø—Ä–∞–≤–∫—É –ø–æc—Ç–∞ –Ω–∞ –∫–∞–Ω–∞–ª–µ/–≤ —á–∞—Ç–µ ‚ùå')
    data = await state.get_data()
    message_id = data['message_id']
    await bot_delete_message_from_chat(chat_id=message.chat.id, message_id=message_id)
    await message.delete()
    await search_message.delete()
    await state.update_data({})
    await state.clear()
    await message.answer(
        text=answer,
        reply_markup=await after_adding_new_chat_keyboard()
    )


@admin_fsm_router.message(StateFilter(FSMAdmin.fsm_tariff))
async def get_fsm_tariff(message: Message, state: FSMContext):
    temp = message.text.strip().split(',')
    tariffs: list[dict[str, int]] = []
    for unit in temp:
        day, price = unit.split('-')
        one_tariff: dict[str, int] = {'days': day, 'price': price}
        tariffs.append(one_tariff)
    data = await state.get_data()
    chat_id = data['chosen_chat_id']
    res = await add_tariffs(chat_id, tariffs)
    if res == 'success':
        answer = (f'–¢–∞—Ä–∏—Ñ—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –≤—ã–±–æ—Ä–æ–≤‚úÖ')
    else:
        answer = f'–¢–∞—Ä–∏—Ñ—ã –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –≤—ã–±–æ—Ä–æ–≤‚ùå –û—à–∏–±–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º!'
    message_id = data['message_id']
    chat_username = data['chat_username']
    await bot_delete_message_from_chat(chat_id=message.chat.id, message_id=message_id)
    await message.delete()
    await state.update_data({})
    await state.clear()
    await message.answer(text=answer,
                         reply_markup=await after_adding_new_tariff_keyboard(chat_id=chat_id,
                                                                             chat_username=chat_username))
